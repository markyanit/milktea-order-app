{"version":3,"sources":["components/DrinkItem/index.js","OrderApp.js","App.js","reportWebVitals.js","index.js"],"names":["DrinkItem","props","state","ice","undefined","sweetness","toppings","addedItem","push","this","name","price","toFixed","setState","prevState","order","concat","join","addToTotalPrice","addToTotalItems","resetItem","totalPrice","totalItems","className","onClick","addItem","React","Component","drinkItems","OrderApp","clearOrder","activeScreen","deleteItem","drink","selectedItem","forEach","i","includes","splice","screen","map","item","ref","child","class","Math","floor","random","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a3aea5c.chunk.js","sourcesContent":["// References:\r\n// - Updating Parent Component State from Child Component: https://chafikgharbi.com/react-update-parent-child-state/\r\n// - Pushing elements into the order(state) array: https://stackoverflow.com/questions/37435334/correct-way-to-push-into-state-array\r\n\r\nimport React from \"react\";\r\n\r\nexport default class DrinkItem extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        ice: undefined,\r\n        sweetness: undefined,\r\n        toppings: undefined,\r\n      };\r\n    }\r\n  \r\n    addItem() {\r\n      let addedItem = [];\r\n  \r\n      addedItem.push(\r\n        this.props.name,\r\n        this.state.ice,\r\n        this.state.sweetness,\r\n        this.state.toppings,\r\n        \"$\" + this.props.price.toFixed(2)\r\n        ); // Adds the specifications for item using the state of each button clicked\r\n        \r\n        this.props.setState(prevState => ({ order: prevState.order.concat([addedItem.join(\"/\")]) })) // Adds specified item to order list\r\n\r\n        this.addToTotalPrice(); // Adds price of item to total price\r\n\r\n        this.addToTotalItems(); // Increments number of total items in the bag\r\n          \r\n        this.resetItem(); // resets the specificiations states for item selection\r\n    }\r\n\r\n    addToTotalPrice() {\r\n        this.props.setState(prevState => ({ totalPrice: prevState.totalPrice + this.props.price}))\r\n    }\r\n\r\n    addToTotalItems() {\r\n        this.props.setState(prevState => ({ totalItems: prevState.totalItems + 1}))\r\n    }\r\n  \r\n    resetItem() {\r\n      this.setState({\r\n        ice: undefined,\r\n        sweetness: undefined,\r\n        toppings: undefined,\r\n      });\r\n    }\r\n  \r\n    render() {\r\n\r\n      return (\r\n        <div className=\"drinkitem\">\r\n          <h1>{this.props.name}</h1>\r\n          <h2>${this.props.price.toFixed(2)}</h2>\r\n  \r\n          <h6>SPECIFICATIONS: </h6>\r\n          <p>{this.state.ice}</p>\r\n          <p>{this.state.sweetness}</p>\r\n          <p>{this.state.toppings}</p>\r\n  \r\n          <h3>\r\n            ---------------------------------------\r\n              </h3>\r\n          \r\n          <h3>ICE:</h3>\r\n  \r\n          <button onClick={() => this.setState({ ice: \"Ice\" })}>Ice</button>\r\n  \r\n          <button onClick={() => this.setState({ ice: \"No Ice\" })}>No Ice</button>\r\n  \r\n          <h3>SWEETNESS:</h3>\r\n  \r\n          <button onClick={() => this.setState({ sweetness: \"100% Sweetness\" })}>\r\n            100%\r\n          </button>\r\n  \r\n          <button onClick={() => this.setState({ sweetness: \"75% Sweetness\" })}>\r\n            75%\r\n          </button>\r\n  \r\n          <button onClick={() => this.setState({ sweetness: \"50% Sweetness\" })}>\r\n            50%\r\n          </button>\r\n  \r\n          <button onClick={() => this.setState({ sweetness: \"25% Sweetness\" })}>\r\n            25%\r\n          </button>\r\n  \r\n          <h3>TOPPINGS:</h3>\r\n  \r\n          <button onClick={() => this.setState({ toppings: \"Boba\" })}>\r\n            Boba\r\n          </button>\r\n  \r\n          <button onClick={() => this.setState({ toppings: \"Mini Boba\" })}>\r\n            Mini Boba\r\n          </button>\r\n  \r\n          <button onClick={() => this.setState({ toppings: \"Popping Boba\" })}>\r\n            Popping Boba\r\n          </button>\r\n  \r\n          <button onClick={() => this.setState({ toppings: \"Lychee Jelly\" })}>\r\n            Lychee Jelly\r\n          </button>\r\n  \r\n          <button onClick={() => this.setState({ toppings: \"Coffee Jelly\" })}>\r\n            Coffee Jelly\r\n          </button>\r\n  \r\n          <button onClick={() => this.setState({ toppings: \"Tropical Juice Popper\" })}>\r\n          Tropical Juice Popper\r\n          </button>\r\n  \r\n          <h3>\r\n                ---------------------------------------\r\n              </h3>\r\n  \r\n              <button onClick={() => this.addItem()} className=\"bigButton\">ADD TO BAG</button>\r\n        </div>\r\n      );\r\n    }\r\n  }","import React from \"react\";\r\nimport DrinkItem from \"./components/DrinkItem\";\r\n\r\nlet drinkItems = [\r\n  { name: \"Original Milk Tea\", price: 2.5 },\r\n  { name: \"Taro Milk Tea\", price: 2.75 },\r\n  { name: \"Earl Grey Milk Tea\", price: 2.5 },\r\n  { name: \"Strawberry Milk Tea\", price: 2.75 },\r\n  { name: \"Hazelnut Milk Tea\", price: 2.5 },\r\n  { name: \"Thai Milk Tea\", price: 2.5 },\r\n  { name: \"Honey Milk Tea\", price: 2.5 },\r\n  { name: \"Mango Milk Tea\", price: 2.75 },\r\n  { name: \"Tiramisu Milk Tea\", price: 2.75 },\r\n  { name: \"Jasmine Milk Tea\", price: 2.5 },\r\n  { name: \"Honeydew Milk Tea\", price: 2.75 },\r\n  { name: \"Purple Yam Milk Tea\", price: 2.75 },\r\n  { name: \"Coconut Milk Tea\", price: 2.5 },\r\n  { name: \"Caramel Milk Tea\", price: 2.5 },\r\n];\r\n\r\nexport default class OrderApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      activeScreen: \"mainMenu\",\r\n      selectedItem: undefined,\r\n      order: [],\r\n      totalPrice: 0,\r\n      totalItems: 0,\r\n\r\n    };\r\n  }\r\n\r\n  clearOrder = () => {\r\n    this.setState({ activeScreen: \"mainMenu\", order: [], totalPrice: 0, totalItems: 0 });\r\n  };\r\n\r\n  deleteItem = (drink) => {\r\n    this.setState({ selectedItem: drink });\r\n\r\n    this.state.order.forEach((i) => {\r\n      if (i === drink) {\r\n        if (i[5].includes(\"2.75\")) {\r\n          this.setState({ totalPrice: this.state.totalPrice - 2.75 });\r\n        } else {\r\n          this.setState({ totalPrice: this.state.totalPrice - 2.5 });\r\n        }\r\n        this.state.order.splice(i, 1);\r\n        this.setState({ totalItems: this.state.totalItems - 1 });\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let screen;\r\n    switch (this.state.activeScreen) {\r\n      case \"mainMenu\":\r\n        screen = (\r\n          <div>\r\n            <h1>MILK TEA</h1>\r\n            {drinkItems.map((item) => (\r\n              <button\r\n                onClick={() =>\r\n                  this.setState({\r\n                    activeScreen: \"drinkItem\",\r\n                    selectedItem: item,\r\n                  })\r\n                }\r\n              >\r\n                {item.name} | ${item.price.toFixed(2)}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        );\r\n        break;\r\n      case \"drinkItem\":\r\n        screen = (\r\n          <div>\r\n            <DrinkItem {...this.state.selectedItem} ref={ref => (this.child = ref)} setState={order => this.setState(order)}></DrinkItem>\r\n            <button onClick={() => this.setState({ activeScreen: \"mainMenu\" })}>\r\n              Back\r\n            </button>\r\n          </div>\r\n        );\r\n        break;\r\n      case \"currentOrder\":\r\n        screen = (\r\n          <div>\r\n            <h1>BAG</h1>\r\n            <h6>* CLICK ON ITEM TO REMOVE *</h6>\r\n            <h3>\r\n              ---------------------------------------\r\n            </h3>\r\n            {this.state.order.map((drink) => (\r\n              <button onClick={() => this.deleteItem(drink)}>{drink}</button>\r\n            ))}\r\n\r\n            <h1>TOTAL: ${this.state.totalPrice.toFixed(2)}</h1>\r\n            <button\r\n              onClick={() => this.setState({ activeScreen: \"orderConfirm\" })}\r\n             class = \"bigButton\">\r\n              Place Order\r\n            </button>\r\n\r\n            <br />\r\n\r\n            <button onClick={() => this.clearOrder()}>Cancel Order</button>\r\n          </div>\r\n        );\r\n        break;\r\n      case \"orderConfirm\":\r\n        screen = (\r\n          <div class=\"orderconfirm\">\r\n            <h1>ORDER CONFIRMED</h1>\r\n            <h3>Order #{Math.floor(Math.random() * 1001)}</h3>\r\n            {this.state.order.map((drink) => (\r\n              <p>{drink}</p>\r\n            ))}\r\n            <h3>TOTAL: ${this.state.totalPrice.toFixed(2)}</h3>\r\n            <h3>\r\n              ---------------------------------------\r\n            </h3>\r\n            <p>\r\n              Thank you for ordering. Please pick up your order at the counter.\r\n            </p>\r\n            <button onClick={() => this.clearOrder()}>New Order</button>\r\n          </div>\r\n        );\r\n        break;\r\n      default:\r\n        screen = undefined;\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <nav>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ activeScreen: \"mainMenu\" });\r\n            }}\r\n          >\r\n            MENU\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ activeScreen: \"currentOrder\" });\r\n            }}\r\n          >\r\n            BAG <b id=\"bag\">({this.state.totalItems}) | ${this.state.totalPrice.toFixed(2)}</b>\r\n          </button>\r\n        </nav>\r\n        <br />\r\n        <br />\r\n        {screen}\r\n      </div>\r\n    );\r\n  }\r\n}","import './App.css';\nimport OrderApp from'./OrderApp.js';\n\nfunction App() {\n  return (\n      <OrderApp></OrderApp>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}